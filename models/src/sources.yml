# source of knowledge: https://docs.getdbt.com/blog/financial-modeling-accounting-principles
#Original dbt Approach:
# 1. Source Schema ✅ 
# 2. Full General Ledger ✅ 
# 3. Account Classifications ✅ 
# 4. Date Spine + Period Aggregation ❌ Not implemented
# 5. Retained Earnings ❌ Not implemented  
# 6. Complete GL by Period ❌ Simplified
# 7. Balance Sheet ✅ Simplified
# 8. P&L Statement ✅ Simplified

version: 2

# Existing seeds sources  
sources: # just for end to end testing
  - name: seeds
    description: "Test data uploaded as seeds"
    
    tables:
      - name: users_test
        description: "Test users data"
      - name: events_test  
        description: "Test events data"

# Raw finance sources for Task 1 migration
  - name: raw_finance
    description: "Raw financial data from legacy systems for Task 1 migration"
    database: "{{ env_var('DBT_BIGQUERY_PROJECT_ID') }}"
    schema: raw_finance
    
    tables:
      - name: gl_headers # Simplified - only used fields
        description: "General Ledger transaction headers"
        # Purpose: Transaction metadata and timing information
        # Key for: Period reporting, transaction grouping, fiscal calendar alignment
        columns:
          - name: gl_header_id
            description: "Unique identifier for GL header"
            tests:
              - unique
              - not_null
          - name: transaction_type
            description: "Type of transaction (INVOICE, PAYMENT, SALES, etc.)"
          - name: transaction_date
            description: "Date when transaction occurred"
            tests:
              - not_null
          - name: fiscal_year
            description: "Fiscal year of transaction"
            tests:
              - not_null
          - name: fiscal_period
            description: "Fiscal period (1-12)"
            tests:
              - not_null
          - name: status
            description: "Transaction status (used in WHERE filter only)"

      - name: gl_lines # Simplified - only used fields
        description: "General Ledger transaction lines"
        # Purpose: Contains the actual debit/credit amounts for each account
        # Key for: Balance calculations, account-level detail, transaction amounts
        columns:
          - name: gl_line_id
            description: "Unique identifier for GL line"
            tests:
              - unique
              - not_null
          - name: gl_header_id
            description: "Foreign key to GL header"
            tests:
              - not_null
              - relationships:
                  to: source('raw_finance', 'gl_headers')
                  field: gl_header_id
          - name: account_code
            description: "Chart of accounts code"
            tests:
              - not_null
          - name: accounted_dr
            description: "Debit amount in functional currency"
          - name: accounted_cr
            description: "Credit amount in functional currency"
          - name: entered_dr
            description: "Debit amount (used in WHERE filter only)"
          - name: entered_cr
            description: "Credit amount (used in WHERE filter only)"
          - name: status
            description: "Line status (used in WHERE filter only)"

      - name: account_hierarchy # Simplified - only used fields
        description: "Chart of accounts with hierarchy"
        # Purpose: Defines account structure, types, and financial statement mapping
        # Key for: Account validation, categorization (Asset/Liability/etc), reporting hierarchy
        columns:
          - name: account_code
            description: "Unique account code"
            tests:
              - unique
              - not_null
          - name: account_name
            description: "Account name/description"
          - name: account_type
            description: "Account type (ASSET, LIABILITY, EQUITY, REVENUE, EXPENSE)"
            tests:
              - not_null
              - accepted_values:
                  values: ['ASSET', 'LIABILITY', 'EQUITY', 'REVENUE', 'EXPENSE']
          - name: parent_account_code
            description: "Parent account for hierarchy"

#This hierarchy allows you to:
#1. Validate account codes exist
#2. Determine if it's an asset, liability, etc.
#3. Roll up detail accounts to summary levels
#4. Map to financial statement lines
#5. Apply correct debit/credit logic